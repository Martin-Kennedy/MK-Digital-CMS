import React from 'react';
import {Row, Col} from 'react-bootstrap';
import { motion, AnimatePresence } from "framer-motion";
import styled from 'styled-components';

const SlideNavLeft = styled.nav`
position: absolute;
top: -20px;
left: calc(-70vw - 10px);
width: 70vw;
height: 100vh;
background-color: #000;
transition: .75s ease-in-out;

     
 }
`

const SlideNavRight = styled.nav`
position: absolute;
top: -20px;
right: calc(-30vw - 10px);
width: 30vw;
height: 100vh;
background-color: #0e5d97;
transition: .75s ease-in-out;
overflow: hidden;
`

const WaveWrapper = styled(motion.div)`
    width: 130vw;
    height: 200px;
    left: 0;
    position: relative;
    
        x: 0;
        svg {
            position: relative;
            left: calc(-2000px + 70vw);
            transform: scale(2, 1);
            opacity: 0.2;
        }
`

const WaveWrapper2 = styled(WaveWrapper)`
        top: -100px;
`
const WaveWrapper3 = styled(WaveWrapper)`
        top: -150px;
`
const WaveWrapper4 = styled(WaveWrapper)`
        top: -250px;
`

const StyledPath = styled(motion.path)`
    width: 2000px;
    strokeWidth: 2;
    strokeLinecap: "round";
    fill: "transparent";
    stroke: #fff;
    
`

const Ul = styled.ul`
    display: flex;
    padding: 0 35px;
    justify-content: end;
`

const Li = styled.li`
    color: ${props => displayValueArray.includes(props.location) ? "#1d1e22" : "white"} !important;
    svg {
        path {
            stroke: ${props => displayValueArray.includes(props.location) ? "#1d1e22" : "white"} !important;
        }
    }

    &:last-of-type {
        margin-right: 8rem;
    }
`
   


export const NavOffCanvasLeft = (props) => {
    console.log(props);
    const d = [
        "m-17.8273,111.16671c20.66565,-0.55532 37.66464,-38.11063 62.99696,-38.66596c28.3335,0.22223 43.33368,37.77777 67.00051,37.66666c25.77793,-0.33334 39.22252,-15.99997 68.33378,-16.99997c26.22238,0.33334 43.44477,16.66663 67.66716,16.99997c30.1113,-0.33334 50.88927,-37.99998 81.33391,-37.99999c33.22242,0.00001 59.1115,37.33332 87.66726,37.99999c33.11131,-0.22223 46.8893,-14.77774 78.00061,-15.3333c32.77794,0.77776 55.22254,14.22218 77.66715,14.66662c29.55574,-0.66667 52.11147,-39.33331 87.66721,-39.99998c30.55573,0.88889 50.11149,38.77776 75.66723,39.66665c26.00018,0 41.16712,-16.66663 74.83396,-17.3333c29.22238,0.11111 52.27802,16.55552 74.16707,17.3333c23.38901,-0.72228 36.27808,-37.94437 59.66709,-38.16666c21.61114,0.22228 42.72229,38.44437 62.33344,39.16665",
        "m-17.8273,111.16671c20.66565,-0.55532 37.66464,-38.11063 62.99696,-38.66596c28.3335,0.22223 41.33368,23.77776 65.00051,23.66665c25.77793,-0.33334 39.22252,-21.99998 68.33378,-22.99998c26.22238,0.33334 43.44477,26.66664 67.66716,26.99998c30.1113,-0.33334 52.88927,-27.99997 83.33391,-27.99998c33.22242,0.00001 58.1115,17.3333 86.66726,17.99997c33.11131,-0.22223 46.8893,-20.77775 78.00061,-21.33331c32.77794,0.77776 57.22254,36.2222 79.66715,36.66664c29.55574,-0.66667 51.11147,-35.3333 86.66721,-35.99997c30.55573,0.88889 46.11149,26.77775 71.66723,27.66664c26.00018,0 41.16712,-26.66664 74.83396,-27.33331c29.22238,0.11111 56.27803,22.55553 78.16708,23.33331c23.38901,-0.72228 36.27808,-21.94436 59.66709,-22.16665c21.61114,0.22228 42.72229,38.44437 62.33344,39.16665",
        "m-17.8273,111.16671c20.66565,-0.55532 38.66464,-28.11062 63.99696,-28.66595c28.3335,0.22223 42.33368,27.77776 66.00051,27.66665c25.77793,-0.33334 39.22252,-27.99998 68.33378,-28.99998c26.22238,0.33334 43.44477,28.66664 67.66716,28.99998c30.1113,-0.33334 51.88927,-27.99997 82.33391,-27.99998c33.22242,0.00001 58.1115,27.33331 86.66726,27.99998c33.11131,-0.22223 44.8893,-25.77775 76.00061,-26.33331c32.77794,0.77776 57.22254,25.22219 79.66715,25.66663c29.55574,-0.66667 57.11147,-28.3333 92.66721,-28.99997c30.55573,0.88889 45.11149,27.77775 70.66723,28.66664c26.00018,0 40.16712,-28.66664 73.83396,-29.33331c29.22238,0.11111 53.27802,28.55553 75.16707,29.33331c23.38901,-0.72228 36.27808,-28.94437 59.66709,-29.16665c21.61114,0.22228 42.72229,29.44437 62.33344,30.16664"
    ]
    return (<SlideNavRight
        className={props.isOpen ? 'slideInLeft' : null}
        >
        <AnimatePresence>
            {props.isOpen && (
                <div>
                <WaveWrapper
                    animate={{x: 1000}}
                    transition={{
                        ease: 'linear',
                        duration: 20,
                        times: [0, 0.32, 0.48, 0.64, .8, 1],
                        delay: 1,
                        repeat: Infinity,
                        repeatType: "reverse",
                    }}
                    >
                    <svg x="0px" y="0px" width="1000" height="200" fill="none" viewBox="0 0 1000 200" >
                    <StyledPath
                    animate={{ d: d }}
                    d="m-17.8273,111.16671c20.66565,-0.55532 38.66464,-28.11062 63.99696,-28.66595c28.3335,0.22223 42.33368,27.77776 66.00051,27.66665c25.77793,-0.33334 39.22252,-27.99998 68.33378,-28.99998c26.22238,0.33334 43.44477,28.66664 67.66716,28.99998c30.1113,-0.33334 51.88927,-27.99997 82.33391,-27.99998c33.22242,0.00001 58.1115,27.33331 86.66726,27.99998c33.11131,-0.22223 44.8893,-25.77775 76.00061,-26.33331c32.77794,0.77776 57.22254,25.22219 79.66715,25.66663c29.55574,-0.66667 57.11147,-28.3333 92.66721,-28.99997c30.55573,0.88889 45.11149,27.77775 70.66723,28.66664c26.00018,0 40.16712,-28.66664 73.83396,-29.33331c29.22238,0.11111 53.27802,28.55553 75.16707,29.33331c23.38901,-0.72228 36.27808,-28.94437 59.66709,-29.16665c21.61114,0.22228 42.72229,29.44437 62.33344,30.16664"
                    transition={{
                        ease: [.57, .21, .69, 1.25],
                        duration: 3,
                        times: [0, 0.32, 0.48, 0.64, .8, 1],
                        delay: 1,
                        repeat: Infinity,
                        repeatType: "reverse",
                    }}>

                    </StyledPath>
                 </svg>
                </WaveWrapper>
                <WaveWrapper2
                    animate={{x: 1000}}
                    transition={{
                        ease: 'linear',
                        duration: 20,
                        times: [0, 0.32, 0.48, 0.64, .8, 1],
                        delay: 2,
                        repeat: Infinity,
                        repeatType: "reverse",
                    }}
                    >
                    <svg x="0px" y="0px" width="1000" height="200" fill="none" viewBox="0 0 1000 200" >
                    <StyledPath
                    animate={{ d: d }}
                    d="m-17.8273,111.16671c20.66565,-0.55532 38.66464,-28.11062 63.99696,-28.66595c28.3335,0.22223 42.33368,27.77776 66.00051,27.66665c25.77793,-0.33334 39.22252,-27.99998 68.33378,-28.99998c26.22238,0.33334 43.44477,28.66664 67.66716,28.99998c30.1113,-0.33334 51.88927,-27.99997 82.33391,-27.99998c33.22242,0.00001 58.1115,27.33331 86.66726,27.99998c33.11131,-0.22223 44.8893,-25.77775 76.00061,-26.33331c32.77794,0.77776 57.22254,25.22219 79.66715,25.66663c29.55574,-0.66667 57.11147,-28.3333 92.66721,-28.99997c30.55573,0.88889 45.11149,27.77775 70.66723,28.66664c26.00018,0 40.16712,-28.66664 73.83396,-29.33331c29.22238,0.11111 53.27802,28.55553 75.16707,29.33331c23.38901,-0.72228 36.27808,-28.94437 59.66709,-29.16665c21.61114,0.22228 42.72229,29.44437 62.33344,30.16664"
                    transition={{
                        ease: [.57, .21, .69, 1.25],
                        duration: 3,
                        times: [0, 0.32, 0.48, 0.64, .8, 1],
                        delay: 2.25,
                        repeat: Infinity,
                        repeatType: "reverse",
                    }}>

                    </StyledPath>
                 </svg>
                </WaveWrapper2>
                <WaveWrapper3
                    animate={{x: 1000}}
                    transition={{
                        ease: 'linear',
                        duration: 20,
                        times: [0, 0.32, 0.48, 0.64, .8, 1],
                        delay: 2.4,
                        repeat: Infinity,
                        repeatType: "reverse",
                    }}
                    >
                    <svg x="0px" y="0px" width="1000" height="200" fill="none" viewBox="0 0 1000 200" >
                    <StyledPath
                    animate={{ d: d }}
                    d="m-17.8273,111.16671c20.66565,-0.55532 38.66464,-28.11062 63.99696,-28.66595c28.3335,0.22223 42.33368,27.77776 66.00051,27.66665c25.77793,-0.33334 39.22252,-27.99998 68.33378,-28.99998c26.22238,0.33334 43.44477,28.66664 67.66716,28.99998c30.1113,-0.33334 51.88927,-27.99997 82.33391,-27.99998c33.22242,0.00001 58.1115,27.33331 86.66726,27.99998c33.11131,-0.22223 44.8893,-25.77775 76.00061,-26.33331c32.77794,0.77776 57.22254,25.22219 79.66715,25.66663c29.55574,-0.66667 57.11147,-28.3333 92.66721,-28.99997c30.55573,0.88889 45.11149,27.77775 70.66723,28.66664c26.00018,0 40.16712,-28.66664 73.83396,-29.33331c29.22238,0.11111 53.27802,28.55553 75.16707,29.33331c23.38901,-0.72228 36.27808,-28.94437 59.66709,-29.16665c21.61114,0.22228 42.72229,29.44437 62.33344,30.16664"
                    transition={{
                        ease: [.57, .21, .69, 1.25],
                        duration: 3,
                        times: [0, 0.32, 0.48, 0.64, .8, 1],
                        delay: 1,
                        repeat: Infinity,
                        repeatType: "reverse",
                    }}>

                    </StyledPath>
                 </svg>
                </WaveWrapper3>
                <WaveWrapper4
                    animate={{x: 1000}}
                    transition={{
                        ease: 'linear',
                        duration: 20,
                        times: [0, 0.32, 0.48, 0.64, .8, 1],
                        delay: 1,
                        repeat: Infinity,
                        repeatType: "reverse",
                    }}
                    >
                    <svg x="0px" y="0px" width="1000" height="200" fill="none" viewBox="0 0 1000 200" >
                    <StyledPath
                    animate={{ d: d }}
                    d="m-17.8273,111.16671c20.66565,-0.55532 38.66464,-28.11062 63.99696,-28.66595c28.3335,0.22223 42.33368,27.77776 66.00051,27.66665c25.77793,-0.33334 39.22252,-27.99998 68.33378,-28.99998c26.22238,0.33334 43.44477,28.66664 67.66716,28.99998c30.1113,-0.33334 51.88927,-27.99997 82.33391,-27.99998c33.22242,0.00001 58.1115,27.33331 86.66726,27.99998c33.11131,-0.22223 44.8893,-25.77775 76.00061,-26.33331c32.77794,0.77776 57.22254,25.22219 79.66715,25.66663c29.55574,-0.66667 57.11147,-28.3333 92.66721,-28.99997c30.55573,0.88889 45.11149,27.77775 70.66723,28.66664c26.00018,0 40.16712,-28.66664 73.83396,-29.33331c29.22238,0.11111 53.27802,28.55553 75.16707,29.33331c23.38901,-0.72228 36.27808,-28.94437 59.66709,-29.16665c21.61114,0.22228 42.72229,29.44437 62.33344,30.16664"
                    transition={{
                        ease: [.57, .21, .69, 1.25],
                        duration: 3,
                        times: [0, 0.32, 0.48, 0.64, .8, 1],
                        delay: 1,
                        repeat: Infinity,
                        repeatType: "reverse",
                    }}>

                    </StyledPath>
                 </svg>
                </WaveWrapper4>
                </div>
                
                )}
            </AnimatePresence>
    </SlideNavRight>)
}

export const NavOffCanvasRight = (props) => {
    console.log(props)
    return (<SlideNavLeft
        className={props.isOpen ? 'slideInRight' : null}
    >
        
        
    </SlideNavLeft>)
}